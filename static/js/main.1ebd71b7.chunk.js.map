{"version":3,"sources":["images/logo.svg","images/icon-dollar.svg","images/icon-person.svg","components/Form/Form.jsx","components/TotalTip/TotalTip.jsx","components/Main/Main.jsx","components/App/App.jsx","index.js"],"names":["Form","amount","setAmount","setTotal","bill","setBill","persons","setPersons","percentage","setPercentage","handleBill","e","parseFloat","target","value","handlePersons","document","querySelector","classList","replace","add","remove","handlePercentage","toString","querySelectorAll","forEach","check","checked","useEffect","action","className","htmlFor","type","min","name","id","placeholder","onChange","src","dollar","alt","onClick","person","TotalTip","total","isNaN","isFinite","setAttribute","removeAttribute","toFixed","Main","useState","App","logo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ebd71b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React, { useEffect } from 'react';\nimport dollar from '../../images/icon-dollar.svg';\nimport person from '../../images/icon-person.svg';\nimport PropTypes from 'prop-types';\nimport './form.scss';\n\nexport const Form = ({amount, setAmount, setTotal, bill, setBill, persons, setPersons, percentage, setPercentage}) => {\n\n    const handleBill = (e) => {\n        setBill(parseFloat(e.target.value));\n    };\n\n    const handlePersons = (e) => {\n        if(e.target.value == ''){\n            document.querySelector('#validation-label').classList.replace('validation-label', 'error-label');\n            document.querySelector('#persons').classList.add('error-input');\n        }else{\n            document.querySelector('#validation-label').classList.replace('error-label', 'validation-label');\n            document.querySelector('#persons').classList.remove('error-input');\n            setPersons(parseFloat(e.target.value));\n        }\n    };\n\n    const handlePercentage = (e) => {\n        const value = (e.target.value).toString();\n        const checks = document.querySelectorAll('input[type=\"checkbox\"]');\n        checks.forEach( check => {\n            if(check != e.target){\n                check.checked = false;\n            }\n        });\n        setPercentage(parseFloat(value));\n    };\n\n    useEffect(() => {\n        setTotal((bill/persons) + amount);\n        setAmount((bill * (percentage*0.01))/persons);\n    }, [handlePersons, handleBill, handlePercentage]);\n    \n    return (\n\n        <form action=\"\" className=\"form\">\n            <div className=\"bill\">\n                <label htmlFor=\"\">Cuenta</label>\n                <div className=\"form-input\">\n                    <input type=\"number\" min=\"0\" name=\"\" id=\"bill\" placeholder=\"0\" onChange={handleBill}/>\n                    <img src={dollar} className=\"input-icon\" alt=\"\" />\n                </div>\n            </div>\n            <div className=\"percentage\">\n                <label htmlFor=\"\">% de Propina</label>\n                <div className=\"buttons\">\n                    <input type=\"checkbox\" name='5' id=\"5\" value=\"5\" onClick={handlePercentage}/>\n                    <label htmlFor=\"5\" id=\"5\">5%</label>\n                    <input type=\"checkbox\" name='10' id=\"10\" value=\"10\" onClick={handlePercentage}/>\n                    <label htmlFor=\"10\" id=\"10\">10%</label>\n                    <input type=\"checkbox\" name='15' id=\"15\" value=\"15\" onClick={handlePercentage}/>\n                    <label htmlFor=\"15\" id=\"15\">15%</label>\n                    <input type=\"checkbox\" name='25' id=\"25\" value=\"25\" onClick={handlePercentage}/>\n                    <label htmlFor=\"25\" id=\"25\">25%</label>\n                    <input type=\"checkbox\" name='50' id=\"50\" value=\"50\" onClick={handlePercentage}/>\n                    <label htmlFor=\"50\" id=\"50\">50%</label>\n                    <input type=\"number\" name=\"\" id=\"\" placeholder=\"Otro\" onChange={handlePercentage}/>\n                </div>\n            </div>\n            <div className=\"people\">\n                <label htmlFor=\"\">No. de personas</label>\n                <span id=\"validation-label\" className=\"validation-label\">No puede ser 0</span>\n                <div className=\"form-input\">\n                    <input type=\"number\" className=\"\" min=\"1\" name=\"\" id=\"persons\" placeholder=\"0\" onChange={handlePersons} />\n                    <img src={person} className=\"input-icon\" alt=\"\" />\n                </div>\n            </div>\n        </form>\n    );\n};\n\nForm.propTypes = {\n    amount: PropTypes.number,\n    setAmount: PropTypes.func,\n    setTotal: PropTypes.func,\n    bill: PropTypes.number,\n    setBill: PropTypes.func,\n    persons: PropTypes.number,\n    setPersons: PropTypes.func,\n    percentage: PropTypes.number,\n    setPercentage: PropTypes.func\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './totaltip.scss';\n\nexport const TotalTip = ({amount, total, setBill, setPersons, setPercentage}) => {\n\n    const handleReset = () => {\n        setBill(0);\n        setPersons(0);\n        setPercentage(0);\n        document.querySelector('#bill').value=0;\n        document.querySelector('#persons').value=0;\n        const checks = document.querySelectorAll('input[type=\"checkbox\"]');\n        checks.forEach( (check) => check.checked = false);\n    };\n\n    useEffect(() => {\n        if(isNaN(amount) || !isFinite(amount)){\n            document.querySelector('button').setAttribute('disabled', '');\n        }else{\n            document.querySelector('button').removeAttribute('disabled');\n        }\n    }, [amount]);\n\n    return (\n        <div className=\"card-total\">\n            <div className=\"tip-amount\">\n                <div className=\"tip\">\n                    <h3>Propina</h3>\n                    <span>/ x persona</span>\n                </div>\n                <h2>$ {amount && isFinite(total) ? amount.toFixed(2) : 0}</h2>\n            </div>\n            <div className=\"tip-amount\">\n                <div className=\"tip\">\n                    <h3>Total</h3>\n                    <span>/ x persona</span>\n                </div>\n                <h2>$ {!isNaN(total) && isFinite(total) ? total.toFixed(2) : 0}</h2>\n            </div>\n            <button type=\"sumbit\" className=\"reset\" onClick={handleReset}>RESET</button>\n        </div>\n    );\n};\n\nTotalTip.propTypes = {\n    amount: PropTypes.number,\n    total: PropTypes.number,\n    setBill: PropTypes.func,\n    setPersons: PropTypes.func,\n    setPercentage: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { TotalTip } from '../TotalTip/TotalTip';\nimport './main.scss';\nexport const Main = () => {\n\n    const [amount, setAmount] = useState();\n    const [total, setTotal] = useState();\n    const [bill, setBill] = useState(0);\n    const [persons, setPersons] = useState(0);\n    const [percentage, setPercentage] = useState(0);\n\n    return (\n        <div className=\"main\">\n            <Form  \n                amount={amount} \n                setAmount={setAmount} \n                setTotal={setTotal} \n                bill={bill} \n                setBill={setBill} \n                persons={persons} \n                setPersons={setPersons}\n                percentage={percentage}\n                setPercentage={setPercentage} />\n            <TotalTip amount={amount} total={total}  setBill={setBill} setPersons={setPersons} setPercentage={setPercentage}  />\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.scss';\nimport logo from '../../images/logo.svg';\nimport { Main } from '../Main/Main';\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <img src={logo} className=\"logo\" alt=\"\"/>\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}